package com.davidoladeji.flexisaf.bootstrap;

import com.davidoladeji.flexisaf.data.CreatorEnum;
import com.davidoladeji.flexisaf.data.GenderEnum;
import com.davidoladeji.flexisaf.model.Student;
import com.davidoladeji.flexisaf.repository.StudentRepository;
import com.davidoladeji.flexisaf.util.RandomDateOfBirth;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;

import java.security.SecureRandom;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Locale;

@Component
public class StudentLoader  implements CommandLineRunner {

    private static final SecureRandom random = new SecureRandom();
    public final StudentRepository studentRepository;


    public StudentLoader(StudentRepository studentRepository) {
        this.studentRepository = studentRepository;
    }

    @Override
    public void run(String... args) throws Exception {
        createStudents();
    }

    public static <T extends Enum<?>> T randomEnum(Class<T> clazz){
        int x = random.nextInt(clazz.getEnumConstants().length);
        return clazz.getEnumConstants()[x];
    }


    private void createStudents() throws ParseException {
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-M-d", Locale.ENGLISH);
        formatter.parse("2001-10-29");
        if (studentRepository.count() == 0) {
            studentRepository.save(
                    Student.builder()
                            .firstName("David")
                            .lastName("Oladeji")
                            .otherName("Oluwayanmi")
                            .emailAddress("david.oladeji.daveola@gmail.com")
                            .gender(randomEnum(GenderEnum.class).toString())
                            .dateOfBirth(formatter.parse("2001-10-29"))
                            .created_by(randomEnum(CreatorEnum.class).toString())
                            .build()
            );
            studentRepository.save(
                    Student.builder()
                            .firstName("Femi")
                            .lastName("Arowosafe")
                            .otherName("Stephen")
                            .emailAddress("david.oladeji.daveola@gmail.com")
                            .gender(randomEnum(GenderEnum.class).toString())
                            .dateOfBirth(formatter.parse("2001-10-30"))
                            .created_by(randomEnum(CreatorEnum.class).toString())
                            .build()
            );
            studentRepository.save(
                    Student.builder()
                            .firstName("Hammed")
                            .lastName("Abu")
                            .otherName("Chukwu")
                            .emailAddress("david.oladeji.daveola@gmail.com")
                            .gender(randomEnum(GenderEnum.class).toString())
                            .dateOfBirth(RandomDateOfBirth.randDob())
                            .created_by(randomEnum(CreatorEnum.class).toString())
                            .build()
            );
            studentRepository.save(
                    Student.builder()
                            .firstName("Aisha")
                            .lastName("Bello")
                            .otherName("Esther")
                            .emailAddress("david.oladeji.daveola@gmail.com")
                            .gender(randomEnum(GenderEnum.class).toString())
                            .dateOfBirth(RandomDateOfBirth.randDob())
                            .created_by(randomEnum(CreatorEnum.class).toString())

                            .build()
            );
            System.out.println("Students default data autogenerated in database");
        }
    }
}
